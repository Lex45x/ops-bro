"$schema": https://raw.githubusercontent.com/Lex45x/ops-bro/v0.3.1/src/OpsBro.Domain/settings-schema.json
version: v0.3
config:
  response:
    url: https://8a0f66f9e0d0034f8f231484e836079a.m.pipedream.net
    comment: url defined here will be used as target for event subscriber's callbacks
  validation:
    token-one: hungry_turing
    token-two: romantic_darwin
  authorization:
    token: Bearer this-is-token-from-config
listeners:
- name: listener-one
  unnestingRules: []
  extractors:
  - comment: Validate token in body, check content type header and presence of checksum
      in query. Generate event with age and name
    eventName: success
    extractionRules:
    - type: FirstRegexMatch
      pattern: "\\d{1,3}"
      path: body.age
      property: age
    - type: Copy
      path: body.name
      property: name
    validationRules:
    - path: body.token
      configPath: validation.token-one
      operator: Equals
    - path: body.requestType
      value: age&name
      operator: Equals
    - path: headers.Content-Type
      value: text/html
      operator: NotEquals
    - path: query.checksum
      value: 
      operator: NotEquals
- name: listener-two
  unnestingRules:
  - type: PerRegexMatch
    path: body.age
    pattern: "\\d{1,3}"
    target: age
  - type: PerRegexMatch
    path: body.name
    pattern: "\\w{1,10}"
    target: name
  extractors:
  - comment: Validate token in body, check content type header and presence of checksum
      in query. Generate event with age and name
    eventName: success
    extractionRules:
    - type: Copy
      path: unnest.name
      property: name
    - type: Copy
      path: unnest.age
      property: age
    validationRules:
    - path: body.token
      configPath: validation.token-two
      operator: Equals
    - path: body.requestType
      value: age&name
      operator: Equals
    - path: headers.Content-Type
      value: text/html
      operator: NotEquals
    - path: query.checksum
      value: 
      operator: NotEquals
eventDispatchers:
- eventName: success
  schema:
    "$id": config-example/success
    type: object
    properties:
      name:
        "$id": "/config-example/success/name"
        type: string
        title: Name
      age:
        "$id": "/config-example/success/age"
        type: string
        title: Age
  subscribers:
  - method: POST
    urlTemplate: "{URL}"
    urlTemplateRules:
    - substring: "{URL}"
      property: config.response.url
    bodyTemplate:
      name: "{NAME}"
      age: "{AGE}"
    bodyTemplateRules:
    - path: name
      property: event.name
    - path: age
      property: event.age
    headerTemplateRules:
    - headerName: Authorization
      property: config.authorization.token
